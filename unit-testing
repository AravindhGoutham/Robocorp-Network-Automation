pipeline {
    agent any

    environment {
        PROJECT_DIR = "/home/student/Network-Automation"
        VENV        = "${PROJECT_DIR}/venv"
    }

    stages {

        /* -------------------- Setup -------------------- */
        stage('Setup Environment') {
            steps {
                echo 'Setting up Python environment...'
                sh '''
                    cd $PROJECT_DIR

                    # Fix permission or recreate venv
                    if [ -d "$VENV" ] && [ ! -w "$VENV" ]; then
                        echo "Existing venv has permission issues. Removing..."
                        rm -rf "$VENV"
                    fi

                    # Create venv if missing
                    if [ ! -d "$VENV" ]; then
                        echo "Creating a new virtual environment..."
                        python3 -m venv "$VENV"
                    fi

                    # Install all dependencies needed for all tests
                    $VENV/bin/pip install --upgrade pip
                    $VENV/bin/pip install netmiko pyyaml prettytable jinja2 ipaddress
                '''
            }
        }

        /* -------------------- IP Validation -------------------- */
        stage('IP Validation') {
            steps {
                echo 'Running IP validation (ipvalidate.py)...'
                sh '''
                    cd $PROJECT_DIR
                    echo "----- IP Address Validation -----"
                    $VENV/bin/python3 ipvalidate.py
                    echo "---------------------------------"
                '''
            }
        }

        /* -------------------- SSH Connectivity -------------------- */
        stage('SSH Connectivity Check') {
            steps {
                echo 'Running SSH connectivity check (ssh-check.py)...'
                sh '''
                    cd $PROJECT_DIR
                    echo "----- SSH Connectivity Check -----"
                    $VENV/bin/python3 ssh_check.py
                    echo "----------------------------------"
                '''
            }
        }

        /* -------------------- Jinja2 Template Validation -------------------- */
        stage('Jinja2 Template Validation') {
            steps {
                echo 'Validating Jinja2 templates for syntax...'
                sh '''
                    cd $PROJECT_DIR
                    echo "----- Jinja2 Template Validation -----"
                    $VENV/bin/python3 template_validation.py
                    echo "--------------------------------------"
                '''
            }
        }

        /* -------------------- Ping Test (Webserver Reachability) -------------------- */
        stage('Ping Webserver (8.8.8.8)') {
            steps {
                echo 'Running ping test for external reachability...'
                sh '''
                    cd $PROJECT_DIR
                    echo "----- Webserver Connectivity Test -----"
                    $VENV/bin/python3 network_tests.py
                    echo "---------------------------------------"
                '''
            }
        }

        /* -------------------- Routing Health -------------------- */
        stage('Routing Health (OSPF/BGP/NMAS)') {
            steps {
                echo 'Running routing health checks...'
                sh '''
                    cd $PROJECT_DIR
                    echo "----- Routing Health Check -----"
                    $VENV/bin/python3 routing_healthcheck.py
                    echo "--------------------------------"
                '''
            }
        }
    }

    /* -------------------- Post Actions -------------------- */
    post {
        success {
            echo 'All validation tests passed successfully!'
        }
        failure {
            echo 'Some validation tests failed. Check logs above.'
        }
        always {
            echo 'Pipeline execution complete.'
        }
    }
}
